"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[37354],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,k=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(k,s(s({ref:t},l),{},{components:n})):r.createElement(k,s({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69362:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"Kubernetes"},s=void 0,i={unversionedId:"discovery/kubernetes",id:"version-2.15/discovery/kubernetes",isDocsHomePage:!1,title:"Kubernetes",description:"The Kubernetes service discovery List-Watch real-time changes of Endpoints resources,\nthen store theirs value into ngx.shared.kubernetes \\\nDiscovery also provides a query interface in accordance with the APISIX Discovery Specification",source:"@site/docs-apisix_versioned_docs/version-2.15/discovery/kubernetes.md",sourceDirName:"discovery",slug:"/discovery/kubernetes",permalink:"/docs/apisix/2.15/discovery/kubernetes",editUrl:"/edit#https://github.com/apache/apisix/edit/release/2.15/docs/en/latest/discovery/kubernetes.md",tags:[],version:"2.15",frontMatter:{title:"Kubernetes"},sidebar:"version-2.15/docs",previous:{title:"Control Plane Service Discovery",permalink:"/docs/apisix/2.15/discovery/control-plane-service-discovery"},next:{title:"PubSub",permalink:"/docs/apisix/2.15/pubsub"}},c=[{value:"Summary",id:"summary",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Interface",id:"interface",children:[]},{value:"Q&amp;A",id:"qa",children:[]}],p={toc:c};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/"},(0,a.kt)("em",{parentName:"a"},"Kubernetes"))," service discovery ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/using-api/api-concepts/"},(0,a.kt)("em",{parentName:"a"},"List-Watch"))," real-time changes of ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/service/"},(0,a.kt)("em",{parentName:"a"},"Endpoints"))," resources,\nthen store theirs value into ngx.shared.kubernetes \\\nDiscovery also provides a query interface in accordance with the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/blob/master/docs/en/latest/discovery.md"},(0,a.kt)("em",{parentName:"a"},"APISIX Discovery Specification"))),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"A detailed configuration for the kubernetes service discovery is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'discovery:\n  kubernetes:\n    service:\n      # apiserver schema, options [http, https]\n      schema: https #default https\n\n      # apiserver host, options [ipv4, ipv6, domain, environment variable]\n      host: ${KUBERNETES_SERVICE_HOST} #default ${KUBERNETES_SERVICE_HOST}\n\n      # apiserver port, options [port number, environment variable]\n      port: ${KUBERNETES_SERVICE_PORT}  #default ${KUBERNETES_SERVICE_PORT}\n\n    client:\n      # serviceaccount token or token_file\n      token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n      #token: |-\n       # eyJhbGciOiJSUzI1NiIsImtpZCI6Ikx5ME1DNWdnbmhQNkZCNlZYMXBsT3pYU3BBS2swYzBPSkN3ZnBESGpkUEEif\n       # 6Ikx5ME1DNWdnbmhQNkZCNlZYMXBsT3pYU3BBS2swYzBPSkN3ZnBESGpkUEEifeyJhbGciOiJSUzI1NiIsImtpZCI\n\n    # kubernetes discovery plugin support use namespace_selector\n    # you can use one of [equal, not_equal, match, not_match] filter namespace\n    namespace_selector:\n      # only save endpoints with namespace equal default\n      equal: default\n\n      # only save endpoints with namespace not equal default\n      #not_equal: default\n\n      # only save endpoints with namespace match one of [default, ^my-[a-z]+$]\n      #match:\n       #- default\n       #- ^my-[a-z]+$\n\n      # only save endpoints with namespace not match one of [default, ^my-[a-z]+$ ]\n      #not_match:\n       #- default\n       #- ^my-[a-z]+$\n\n    # kubernetes discovery plugin support use label_selector\n    # for the expression of label_selector, please refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n    label_selector: |-\n      first="a",second="b"\n')),(0,a.kt)("p",null,"If the kubernetes service discovery runs inside a pod, you can use minimal configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"discovery:\n  kubernetes: { }\n")),(0,a.kt)("p",null,"If the kubernetes service discovery runs outside a pod, you need to create or select a specified ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"},(0,a.kt)("em",{parentName:"a"},"ServiceAccount")),",\nthen get its token value, and use following configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"discovery:\n  kubernetes:\n    service:\n      schema: https\n      host: # enter apiserver host value here\n      port: # enter apiserver port value here\n    client:\n      token: # enter serviceaccount token value here\n      #token_file: # enter file path here\n")),(0,a.kt)("h2",{id:"interface"},"Interface"),(0,a.kt)("p",null,"the kubernetes service discovery provides a query interface in accordance with the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/blob/master/docs/en/latest/discovery.md"},(0,a.kt)("em",{parentName:"a"},"APISIX Discovery Specification"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"function:")," \\\nnodes(service_name)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"description:")," \\\nnodes() function attempts to look up the ngx.shared.kubernetes for nodes corresponding to service",(0,a.kt)("em",{parentName:"p"},"name, \\\nservice_name should match pattern: "),"[namespace]","/","[name]",":","[portName]","_"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"namespace: The namespace where the kubernetes endpoints is located")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"name: The name of the kubernetes endpoints")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"portName: The portName of the kubernetes endpoints, if there is no portName, use targetPort, port instead"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"return value:")," \\\nif the kubernetes endpoints value is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Endpoints\nmetadata:\n  name: plat-dev\n  namespace: default\nsubsets:\n  - addresses:\n      - ip: "10.5.10.109"\n      - ip: "10.5.10.110"\n    ports:\n      - port: 3306\n')),(0,a.kt)("p",null,'  a nodes("default/plat-dev:3306") call will get follow result:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' {\n     {\n         host="10.5.10.109",\n         port= 3306,\n         weight= 50,\n     },\n     {\n         host="10.5.10.110",\n         port= 3306,\n         weight= 50,\n     },\n }\n')),(0,a.kt)("h2",{id:"qa"},"Q&A"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Q: Why only support configuration token to access ",(0,a.kt)("em",{parentName:"p"},"Kubernetes APIServer")," \\\nA: Usually, we will use three ways to complete the authentication of ",(0,a.kt)("em",{parentName:"p"},"Kubernetes APIServer"),":"),(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},"mTLS"),(0,a.kt)("li",{parentName:"ul"},"token"),(0,a.kt)("li",{parentName:"ul"},"basic authentication")),(0,a.kt)("p",{parentName:"blockquote"},"Because lua-resty-http does not currently support mTLS, and basic authentication is not recommended,\\\nSo currently only the token authentication method is implemented")),(0,a.kt)("hr",null),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Q: APISIX inherits Nginx's multiple process model, does it mean that each nginx worker process will ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/using-api/api-concepts/"},(0,a.kt)("em",{parentName:"a"},"List-Watch"))," kubernetes endpoints resources \\\nA: The kubernetes service discovery only uses privileged processes to ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/using-api/api-concepts/"},(0,a.kt)("em",{parentName:"a"},"List-Watch"))," kubernetes endpoints resources, then store theirs value \\\ninto ngx.shared.kubernetes, worker processes get results by querying ngx.shared.kubernetes")),(0,a.kt)("hr",null),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Q: How to get ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"},(0,a.kt)("em",{parentName:"a"},"ServiceAccount"))," token value \\\nA: Assume your ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"},(0,a.kt)("em",{parentName:"a"},"ServiceAccount"))," located in namespace apisix and name is kubernetes-discovery, you can use the following steps to get token value"),(0,a.kt)("ol",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ol"},"Get secret name: \\\nyou can execute the following command, the output of the first column is the secret name we want")),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n apisix get secrets | grep kubernetes-discovery\n")),(0,a.kt)("ol",{parentName:"blockquote",start:2},(0,a.kt)("li",{parentName:"ol"},"Get token value: \\\nassume secret resources name is kubernetes-discovery-token-c64cv, you can execute the following command, the output is the service account token value we want")),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n apisix get secret kubernetes-discovery-token-c64cv -o jsonpath={.data.token} | base64 -d\n"))))}l.isMDXComponent=!0}}]);