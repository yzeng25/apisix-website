"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[25191],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>u});var t=a(67294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function r(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(a),u=i,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return a?t.createElement(h,l(l({ref:n},c),{},{components:a})):t.createElement(h,l({ref:n},c))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=a.length,l=new Array(o);l[0]=d;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r.mdxType="string"==typeof e?e:i,l[1]=r;for(var p=2;p<o;p++)l[p]=a[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},31865:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var t=a(87462),i=(a(67294),a(3905)),o=a(55064),l=a(58215);const r={title:"FAQ"},s=void 0,p={unversionedId:"FAQ",id:"FAQ",isDocsHomePage:!1,title:"FAQ",description:"The Charts will install ETCD 3.4.14 by default. If you want to install Apache APISIX only, please set etcd.enabled=false and set etcd.host={http://your_etcd_address:2379}.",source:"@site/docs/apisix-helm-chart/FAQ.md",sourceDirName:".",slug:"/FAQ",permalink:"/docs/helm-chart/FAQ",editUrl:"/edit#https://github.com/apache/apisix-helm-chart/edit/master/docs/en/latest/FAQ.md",tags:[],version:"current",frontMatter:{title:"FAQ"},sidebar:"docs",previous:{title:"Apache APISIX Ingress Controller Helm Chart",permalink:"/docs/helm-chart/apisix-ingress-controller"}},c=[{value:"How to install APISIX only?",id:"how-to-install-apisix-only",children:[]},{value:"How to install Apache APISIX running in standalone mode?",id:"how-to-install-apache-apisix-running-in-standalone-mode",children:[]},{value:"Why get 403 when I access Apache APISIX admin api?",id:"why-get-403-when-i-access-apache-apisix-admin-api",children:[]},{value:"Creating resources such as ApisixRoute has no effect?",id:"creating-resources-such-as-apisixroute-has-no-effect",children:[]}],m={toc:c};function d(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"how-to-install-apisix-only"},"How to install APISIX only?"),(0,i.kt)("p",null,"The Charts will install ETCD ",(0,i.kt)("inlineCode",{parentName:"p"},"3.4.14")," by default. If you want to install Apache APISIX only, please set ",(0,i.kt)("inlineCode",{parentName:"p"},"etcd.enabled=false")," and set ",(0,i.kt)("inlineCode",{parentName:"p"},"etcd.host={http://your_etcd_address:2379}"),"."),(0,i.kt)("p",null,"Please use the FQDN or the IP address of the ETCD cluster."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# if etcd export by kubernetes service need spell fully qualified name\nhelm install apisix apisix/apisix \\\n    --set etcd.enabled=false \\\n    --set etcd.host={http://etcd_node_1:2379\\,http://etcd_node_2:2379}\n")),(0,i.kt)("h3",{id:"how-to-install-apache-apisix-running-in-standalone-mode"},"How to install Apache APISIX running in standalone mode?"),(0,i.kt)("p",null,"Helm chart does not provide a direct way to deploy Apache APISIX running in standalone mode. You can install it in the following manner."),(0,i.kt)("p",null,"Create a ",(0,i.kt)("inlineCode",{parentName:"p"},"deploy.yaml")," with the following content."),(0,i.kt)(o.Z,{groupId:"version",defaultValue:"3.0.0-beta",values:[{label:"3.0.0-beta",value:"3.0.0-beta"},{label:"2.15",value:"2.15"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"3.0.0-beta",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'# deploy.yaml\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: apisix-gw-config.yaml\ndata:\n  config.yaml: |\n    deployment:\n      role: data_plane\n      role_data_plane:\n        config_provider: yaml\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: apisix.yaml\ndata:\n  apisix.yaml: |\n    routes:\n      -\n        uri: /hi\n        upstream:\n          nodes:\n            "127.0.0.1:1980": 1\n          type: roundrobin\n    #END\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: apisix-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: apisix-deployment\n  strategy:\n    rollingUpdate:\n      maxSurge: 50%\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: apisix-deployment\n    spec:\n      terminationGracePeriodSeconds: 0\n      containers: \n        - livenessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 1\n            periodSeconds: 2\n            successThreshold: 1\n            tcpSocket:\n              port: 9080\n            timeoutSeconds: 2\n          readinessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 1\n            periodSeconds: 2\n            successThreshold: 1\n            tcpSocket:\n              port: 9080\n            timeoutSeconds: 2\n          image: "apache/apisix:2.99.0-centos"\n          imagePullPolicy: IfNotPresent\n          name: apisix-deployment\n          # Create a soft link to link the apisix.yaml file in the mount directory to /usr/local/apisix/conf/apisix.yaml.\n          command: ["sh", "-c","ln -s /apisix-config/apisix.yaml /usr/local/apisix/conf/apisix.yaml && /docker-entrypoint.sh docker-start"]\n          ports:\n            - containerPort: 9080\n              name: "http"\n              protocol: "TCP"\n            - containerPort: 9443\n              name: "https"\n              protocol: "TCP"\n              \n          volumeMounts:\n            - mountPath: /usr/local/apisix/conf/config.yaml\n              name: apisix-config-yaml-configmap\n              subPath: config.yaml\n            # configMap directory mounts\n            - mountPath: /apisix-config\n              name: apisix-admin\n      volumes:\n        - configMap:\n            name: apisix-gw-config.yaml\n          name: apisix-config-yaml-configmap\n        - configMap:\n            name: apisix.yaml\n          name: apisix-admin\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: apisix-service\nspec:\n  selector:\n    app: apisix-deployment\n  ports:\n    - name: http\n      port: 9080\n      protocol: TCP\n      targetPort: 9080\n    - name: https\n      port: 9443\n      protocol: TCP\n      targetPort: 9443\n  type: NodePort\n'))),(0,i.kt)(l.Z,{value:"2.15",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'# deploy.yaml\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: apisix-gw-config.yaml\ndata:\n  config.yaml: |\n    apisix:\n      enable_admin: false\n      config_center: yaml\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: apisix.yaml\ndata:\n  apisix.yaml: |\n    routes:\n      -\n        uri: /hi\n        upstream:\n          nodes:\n            "127.0.0.1:1980": 1\n          type: roundrobin\n    #END\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: apisix-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: apisix-deployment\n  strategy:\n    rollingUpdate:\n      maxSurge: 50%\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: apisix-deployment\n    spec:\n      terminationGracePeriodSeconds: 0\n      containers: \n        - livenessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 1\n            periodSeconds: 2\n            successThreshold: 1\n            tcpSocket:\n              port: 9080\n            timeoutSeconds: 2\n          readinessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 1\n            periodSeconds: 2\n            successThreshold: 1\n            tcpSocket:\n              port: 9080\n            timeoutSeconds: 2\n          image: "apache/apisix:2.15.0-alpine"\n          imagePullPolicy: IfNotPresent\n          name: apisix-deployment\n          # Create a soft link to link the apisix.yaml file in the mount directory to /usr/local/apisix/conf/apisix.yaml.\n          command: ["sh", "-c", "ln -s /apisix-config/apisix.yaml /usr/local/apisix/conf/apisix.yaml && /usr/bin/apisix init && /usr/bin/apisix init_etcd && /usr/local/openresty/bin/openresty -p /usr/local/apisix -g \'daemon off;\'"]\n          ports:\n            - containerPort: 9080\n              name: "http"\n              protocol: "TCP"\n            - containerPort: 9443\n              name: "https"\n              protocol: "TCP"\n          volumeMounts:\n            - mountPath: /usr/local/apisix/conf/config.yaml\n              name: apisix-config-yaml-configmap\n              subPath: config.yaml\n            # configMap directory mounts\n            - mountPath: /apisix-config\n              name: apisix-admin\n      volumes:\n        - configMap:\n            name: apisix-gw-config.yaml\n          name: apisix-config-yaml-configmap\n        - configMap:\n            name: apisix.yaml\n          name: apisix-admin\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: apisix-service\nspec:\n  selector:\n    app: apisix-deployment\n  ports:\n    - name: http\n      port: 9080\n      protocol: TCP\n      targetPort: 9080\n    - name: https\n      port: 9443\n      protocol: TCP\n      targetPort: 9443\n  type: NodePort\n')))),(0,i.kt)("p",null,"Apply the configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"deploy.yaml")," to pod."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f deploy.yaml\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol"},"The mount of the ",(0,i.kt)("inlineCode",{parentName:"li"},"apisix.yaml")," file requires the injection of the softlink command, so do not change the configMap mount directory to ",(0,i.kt)("inlineCode",{parentName:"li"},"/usr/local/apisix/conf"),", to avoid other configuration files being overwritten."),(0,i.kt)("li",{parentName:"ol"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"apisix.yaml")," is mounted as a configMap, so there will be a delay in reloading the rules after ",(0,i.kt)("inlineCode",{parentName:"li"},"apisix.yaml")," is changed; please refer to this ",(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically"},"document")," for details. ")))),(0,i.kt)("h3",{id:"why-get-403-when-i-access-apache-apisix-admin-api"},"Why get 403 when I access Apache APISIX admin api?"),(0,i.kt)("p",null,"We can define ",(0,i.kt)("inlineCode",{parentName:"p"},"admin.allow.ipList")," in CIDR."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'helm install apisix apisix/apisix \\\n    --set admin.allow.ipList="10.22.100.12/8" \\\n    --set admin.allow.ipList="172.0.0.0/24"\n')),(0,i.kt)("p",null,"If you want to allow all IPs for a quick test, just set ",(0,i.kt)("inlineCode",{parentName:"p"},'admin.allow.ipList=""')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'helm install apisix apisix/apisix \\\n    --set admin.allow.ipList=""\n')),(0,i.kt)("h3",{id:"creating-resources-such-as-apisixroute-has-no-effect"},"Creating resources such as ApisixRoute has no effect?"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://apisix.apache.org/docs/ingress-controller/tutorials/check-crd-status"},"check the synchronization status of CRD")),(0,i.kt)("li",{parentName:"ol"},"Find the current version of the CRD declaration in ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/apisix-ingress-controller"},"https://github.com/apache/apisix-ingress-controller"),", located in the samples/deploy/crd directory, overwrite and install them. ")),(0,i.kt)("p",null,"Note: this operation may result in loss or corruption of historical data. You should back up the relevant data in advance."))}d.isMDXComponent=!0},58215:(e,n,a)=>{a.d(n,{Z:()=>i});var t=a(67294);const i=function(e){let{children:n,hidden:a,className:i}=e;return t.createElement("div",{role:"tabpanel",hidden:a,className:i},n)}},55064:(e,n,a)=>{a.d(n,{Z:()=>p});var t=a(67294),i=a(79443);const o=function(){const e=(0,t.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var l=a(86010);const r="tabItem_vU9c",s="tabItemActive_cw6a";const p=function(e){var n;const{lazy:a,block:i,defaultValue:p,values:c,groupId:m,className:d}=e,u=t.Children.toArray(e.children),h=null!=c?c:u.map((e=>({value:e.props.value,label:e.props.label}))),f=null!=p?p:null==(n=u.find((e=>e.props.default)))?void 0:n.props.value,{tabGroupChoices:y,setTabGroupChoices:g}=o(),[x,v]=(0,t.useState)(f),k=[];if(null!=m){const e=y[m];null!=e&&e!==x&&h.some((n=>n.value===e))&&v(e)}const b=e=>{const n=e.currentTarget,a=k.indexOf(n),t=h[a].value;v(t),null!=m&&(g(m,t),setTimeout((()=>{(function(e){const{top:n,left:a,bottom:t,right:i}=e.getBoundingClientRect(),{innerHeight:o,innerWidth:l}=window;return n>=0&&i<=l&&t<=o&&a>=0})(n)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(s),setTimeout((()=>n.classList.remove(s)),2e3))}),150))},w=e=>{var n;let a=null;switch(e.key){case"ArrowRight":{const n=k.indexOf(e.target)+1;a=k[n]||k[0];break}case"ArrowLeft":{const n=k.indexOf(e.target)-1;a=k[n]||k[k.length-1];break}}null==(n=a)||n.focus()};return t.createElement("div",{className:"tabs-container"},t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":i},d)},h.map((e=>{let{value:n,label:a}=e;return t.createElement("li",{role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,className:(0,l.Z)("tabs__item",r,{"tabs__item--active":x===n}),key:n,ref:e=>k.push(e),onKeyDown:w,onFocus:b,onClick:b},null!=a?a:n)}))),a?(0,t.cloneElement)(u.filter((e=>e.props.value===x))[0],{className:"margin-vert--md"}):t.createElement("div",{className:"margin-vert--md"},u.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==x})))))}},79443:(e,n,a)=>{a.d(n,{Z:()=>t});const t=(0,a(67294).createContext)(void 0)},86010:(e,n,a)=>{function t(e){var n,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(a=t(e[n]))&&(i&&(i+=" "),i+=a);else for(n in e)e[n]&&(i&&(i+=" "),i+=n);return i}a.d(n,{Z:()=>i});const i=function(){for(var e,n,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(n=t(e))&&(i&&(i+=" "),i+=n);return i}}}]);