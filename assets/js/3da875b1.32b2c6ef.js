"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[73394],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,c=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=p(r),f=i,g=d["".concat(s,".").concat(f)]||d[f]||u[f]||c;return r?n.createElement(g,a(a({ref:t},l),{},{components:r})):n.createElement(g,a({ref:t},l))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var c=r.length,a=new Array(c);a[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var p=2;p<c;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},11498:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>o,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));const c={title:"Script"},a=void 0,o={unversionedId:"architecture-design/script",id:"version-2.13/architecture-design/script",isDocsHomePage:!1,title:"Script",description:"Scripts lets you write arbitrary Lua code or directly call existing plugins and execute them during the HTTP request/response lifecycle.",source:"@site/docs-apisix_versioned_docs/version-2.13/architecture-design/script.md",sourceDirName:"architecture-design",slug:"/architecture-design/script",permalink:"/docs/apisix/2.13/architecture-design/script",editUrl:"/edit#https://github.com/apache/apisix/edit/release/2.13/docs/en/latest/architecture-design/script.md",tags:[],version:"2.13",frontMatter:{title:"Script"},sidebar:"version-2.13/docs",previous:{title:"Plugin",permalink:"/docs/apisix/2.13/architecture-design/plugin"},next:{title:"Service",permalink:"/docs/apisix/2.13/architecture-design/service"}},s=[],p={toc:s};function l(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Scripts lets you write arbitrary Lua code or directly call existing plugins and execute them during the HTTP request/response lifecycle."),(0,i.kt)("p",null,"A Script configuration can be directly bound to a ",(0,i.kt)("a",{parentName:"p",href:"/docs/apisix/2.13/architecture-design/route"},"Route"),"."),(0,i.kt)("p",null,"Scripts and ",(0,i.kt)("a",{parentName:"p",href:"/docs/apisix/2.13/architecture-design/plugin"},"Plugins")," are mutually exclusive, and a Script is executed before a Plugin. This means that after configuring a Script, the Plugin configured on the Route will ",(0,i.kt)("strong",{parentName:"p"},"not")," be executed."),(0,i.kt)("p",null,"Scripts also have a concept of execution phase which supports the ",(0,i.kt)("inlineCode",{parentName:"p"},"access"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"header_filter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"body_filter")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"log")," phase. The corresponding phase will be executed automatically by the system in the Script."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    ...\n    "script": "local _M = {} \\n function _M.access(api_ctx) \\n ngx.log(ngx.INFO,\\"hit access phase\\") \\n end \\nreturn _M"\n}\n')))}l.isMDXComponent=!0}}]);