"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[42831],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(t),f=o,d=m["".concat(s,".").concat(f)]||m[f]||c[f]||a;return t?i.createElement(d,r(r({ref:n},u),{},{components:t})):i.createElement(d,r({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<a;p++)r[p]=t[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},63927:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var i=t(87462),o=(t(67294),t(3905));const a={title:"Configuration based on environments",keywords:["Apache APISIX","API Gateway","Configuration","Environment"],description:"This document describes how you can change APISIX configuration based on environments."},r=void 0,l={unversionedId:"profile",id:"profile",isDocsHomePage:!1,title:"Configuration based on environments",description:"This document describes how you can change APISIX configuration based on environments.",source:"@site/docs/apisix/profile.md",sourceDirName:".",slug:"/profile",permalink:"/docs/apisix/next/profile",editUrl:"/edit#https://github.com/apache/apisix/edit/master/docs/en/latest/profile.md",tags:[],version:"current",frontMatter:{title:"Configuration based on environments",keywords:["Apache APISIX","API Gateway","Configuration","Environment"],description:"This document describes how you can change APISIX configuration based on environments."},sidebar:"docs",previous:{title:"Debug Function",permalink:"/docs/apisix/next/debug-function"},next:{title:"SSL Protocol",permalink:"/docs/apisix/next/ssl-protocol"}},s=[{value:"Using environment variables in the configuration file",id:"using-environment-variables-in-the-configuration-file",children:[]},{value:"Using the <code>APISIX_PROFILE</code> environment variable",id:"using-the-apisix_profile-environment-variable",children:[]}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Extracting configuration from the code makes APISIX adaptable to changes in the operating environments. For example, APISIX can be deployed in a development environment for testing and then moved to a production environment. The configuration for APISIX in these environments would be different."),(0,o.kt)("p",null,"APISIX supports managing multiple configurations through environment variables in two different ways:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Using environment variables in the configuration file"),(0,o.kt)("li",{parentName:"ol"},"Using an environment variable to switch between multiple configuration profiles")),(0,o.kt)("h2",{id:"using-environment-variables-in-the-configuration-file"},"Using environment variables in the configuration file"),(0,o.kt)("p",null,"This is useful when you want to change some configurations based on the environment."),(0,o.kt)("p",null,"To use environment variables, you can use the syntax ",(0,o.kt)("inlineCode",{parentName:"p"},"key_name: ${{ENVIRONMENT_VARIABLE_NAME:=}}"),". You can also set a default value to fall back to if no environment variables are set by adding it to the configuration as ",(0,o.kt)("inlineCode",{parentName:"p"},"key_name: ${{ENVIRONMENT_VARIABLE_NAME:=VALUE}}"),". The example below shows how you can modify your configuration file to use environment variables to set the listening ports of APISIX:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"apisix:\n  node_listen:\n    - ${{APISIX_NODE_LISTEN:=}}\ndeployment:\n  admin:\n    admin_listen:\n      port: ${{DEPLOYMENT_ADMIN_ADMIN_LISTEN:=}}\n")),(0,o.kt)("p",null,"When you run APISIX, you can set these environment variables dynamically:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"export APISIX_NODE_LISTEN=8132\nexport DEPLOYMENT_ADMIN_ADMIN_LISTEN=9232\n")),(0,o.kt)("p",null,"Now when you start APISIX, it will listen on port ",(0,o.kt)("inlineCode",{parentName:"p"},"8132")," and expose the Admin API on port ",(0,o.kt)("inlineCode",{parentName:"p"},"9232"),"."),(0,o.kt)("p",null,"To use default values if no environment variables are set, you can add it to your configuration file as shown below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"apisix:\n  node_listen:\n    - ${{APISIX_NODE_LISTEN:=9080}}\ndeployment:\n  admin:\n    admin_listen:\n      port: ${{DEPLOYMENT_ADMIN_ADMIN_LISTEN:=9180}}\n")),(0,o.kt)("p",null,"Now if you don't specify these environment variables when running APISIX, it will fall back to the default values and expose the Admin API on port ",(0,o.kt)("inlineCode",{parentName:"p"},"9180")," and listen on port ",(0,o.kt)("inlineCode",{parentName:"p"},"9080"),"."),(0,o.kt)("h2",{id:"using-the-apisix_profile-environment-variable"},"Using the ",(0,o.kt)("inlineCode",{parentName:"h2"},"APISIX_PROFILE")," environment variable"),(0,o.kt)("p",null,"If you have multiple configuration changes for multiple environments, it might be better to have a different configuration file for each."),(0,o.kt)("p",null,"Although this might increase the number of configuration files, you would be able to manage each independently and can even do version management."),(0,o.kt)("p",null,"APISIX uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"APISIX_PROFILE")," environment variable to switch between environments, i.e. to switch between different sets of configuration files. If the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"APISIX_PROFILE")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"env"),", then APISIX will look for the configuration files ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/config-env.yaml"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/apisix-env.yaml"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/debug-env.yaml"),"."),(0,o.kt)("p",null,"For example for the production environment, you can have:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"conf/config-prod.yaml"),(0,o.kt)("li",{parentName:"ul"},"conf/apisix-prod.yaml"),(0,o.kt)("li",{parentName:"ul"},"conf/debug-prod.yaml")),(0,o.kt)("p",null,"And for the development environment:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"conf/config-dev.yaml"),(0,o.kt)("li",{parentName:"ul"},"conf/apisix-dev.yaml"),(0,o.kt)("li",{parentName:"ul"},"conf/debug-dev.yaml")),(0,o.kt)("p",null,"And if no environment is specified, APISIX can use the default configuration files:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"conf/config.yaml"),(0,o.kt)("li",{parentName:"ul"},"conf/apisix.yaml"),(0,o.kt)("li",{parentName:"ul"},"conf/debug.yaml")),(0,o.kt)("p",null,"To use a particular configuration, you can specify it in the environment variable:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"export APISIX_PROFILE=prod\n")),(0,o.kt)("p",null,"APISIX will now use the ",(0,o.kt)("inlineCode",{parentName:"p"},"-prod.yaml")," configuration files."))}u.isMDXComponent=!0}}]);